name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  build-base:
    runs-on: ubuntu-latest
    steps:

      # download our git repository to our current environment
      # view: https://github.com/marketplace/actions/checkout
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: false
          target: builder_cache
          outputs: type=docker,dest=/tmp/base_image.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            base-builder:latest

      # enables you to upload your artifacts from your workflow allowing you to share data between jobs
      # view: https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: base_image
          path: /tmp/base_image.tar
  
  build-code:
    runs-on: ubuntu-latest
    needs: build-base
    steps:

      #for having access to our source code
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      # This is the counterpart of the upload-artifact, it allows us to get the uploaded artifacts
      # view: https://github.com/marketplace/actions/download-a-build-artifact
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: base_image
          path: /tmp
      
      - name: Load image
        run: |
          docker load --input /tmp/base_image.tar
          docker image ls -a

      - name: Build with src
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: false
          target: builder
          tags: |
            src-builder:latest